<?php
/**
 * Created by Arimis Wang using eclipse neon on 2017年3月13日14:16:43
 * @author Arimis Wang
 * @package interpreter
 * @license 上海珂兰商贸有限公司
 * @link wangwengang@kela.cn
 */

namespace arimis\integral\controllers;

use yii\web\Controller;
use Yii;

class IntegralBaseController extends Controller {

    public $isFrontend = false;
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function beforeAction($action) {
        if(isset($this->module->backendLayoutPath) && !empty($this->module->backendLayoutPath)) {
            $this->module->layoutPath = $this->module->backendLayoutPath;
        }
        else {
            $this->module->layoutPath = '@app/services/integral/views/layouts';
        }
        if(isset($this->module->backendLayout) && !empty($this->module->backendLayout)) {
            $this->module->layout = $this->module->backendLayout;
        }
        else {
            $this->module->layout = 'backend';
        }
        $this->layout = $this->module->layoutPath ."/" . $this->module->layout . '.php';

        if(!$this->isFrontend) {
            $auth = Yii::$app->authManager;
            if (Yii::$app->user->getIsGuest()) {
                return $this->redirect([Yii::$app->user->loginUrl, "login_referrer" => Yii::$app->request->absoluteUrl]);
            }
            $currentRoute = Yii::$app->controller->module->id . '/' . Yii::$app->controller->id . '/' . Yii::$app->controller->action->id;
            $currentRoute = strtolower($currentRoute);
            //超级管理员
            if (in_array(Yii::$app->user->identity->getId(), Yii::$app->params['superAdmin'])) {
                return true;
            }
            if (!$auth->getPermission($currentRoute)) {
                //该页面没有纳入权限管理
                return true;
            }
            if (!Yii::$app->user->can($currentRoute)) {
                throw new \yii\web\HttpException(403, Yii::t('app', '对不起，您现在还没获此操作的权限'));
            }
            else {
                return parent::beforeAction($action);
            }
        }

		return parent::beforeAction($action);
	}
}